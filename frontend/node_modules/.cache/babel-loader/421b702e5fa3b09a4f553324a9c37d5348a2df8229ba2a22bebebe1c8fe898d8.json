{"ast":null,"code":"var _jsxFileName = \"/Users/csark0812/Documents/stats-app/frontend/src/components/Seasons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Seasons = () => {\n  _s();\n  const [activeSeasons, setActiveSeasons] = useState([]);\n  const [pastSeasons, setPastSeasons] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Make the API call to fetch the list of leagues\n    api.get('/seasons/', {\n      params: {\n        league: sessionStorage.getItem('league').league_id\n      }\n    }).then(response => {\n      setActiveSeasons(response.data.filter(season => season.is_complete = false));\n      setPastSeasons(response.data.filter(season => season.is_complete = true));\n    }).catch(error => {\n      console.error('Error fetching seasons:', error);\n    });\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  const handleLeagueClick = leagueId => {\n    api.get('/leagues/', {\n      params: {\n        league_id: leagueId\n      }\n    }) // Make the API call with league_id as a parameter\n    .then(response => {\n      const league = response.data[0]; // Assuming the response is a list with one league\n      sessionStorage.setItem('league', JSON.stringify(league));\n      console.log(league.name);\n      navigate(`/${encodeURIComponent(league.name)}`);\n    }).catch(error => {\n      console.error('Error fetching league:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Seasons List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: activeSeasons.map(season => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLeagueClick(season.season_id, season.name),\n          children: season.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, season.season_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Seasons List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastSeasons.map(season => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLeagueClick(season.season_id, season.name),\n          children: season.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, season.season_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Seasons, \"QgjCy8d8EjzWWV9sBBcBd2dWw+E=\", false, function () {\n  return [useNavigate];\n});\n_c = Seasons;\nexport default Seasons;\nvar _c;\n$RefreshReg$(_c, \"Seasons\");","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","Seasons","_s","activeSeasons","setActiveSeasons","pastSeasons","setPastSeasons","navigate","get","params","league","sessionStorage","getItem","league_id","then","response","data","filter","season","is_complete","catch","error","console","handleLeagueClick","leagueId","setItem","JSON","stringify","log","name","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","season_id","_c","$RefreshReg$"],"sources":["/Users/csark0812/Documents/stats-app/frontend/src/components/Seasons.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Seasons = () => {\n  const [activeSeasons, setActiveSeasons] = useState([]);\n  const [pastSeasons, setPastSeasons] = useState([]);\n\n  const navigate = useNavigate()\n  useEffect(() => {\n    // Make the API call to fetch the list of leagues\n    api.get('/seasons/', { params: { league: sessionStorage.getItem('league').league_id} })\n      .then(response => {\n        setActiveSeasons(response.data.filter(season => season.is_complete = false));\n        setPastSeasons(response.data.filter(season => season.is_complete = true));\n      })\n      .catch(error => {\n        console.error('Error fetching seasons:', error);\n      });\n  }, []); // Empty dependency array ensures the effect runs only once\n  \n  const handleLeagueClick = (leagueId) => {\n    api.get('/leagues/', { params: { league_id: leagueId } }) // Make the API call with league_id as a parameter\n      .then(response => {\n        const league = response.data[0]; // Assuming the response is a list with one league\n        sessionStorage.setItem('league', JSON.stringify(league));\n        console.log(league.name)\n        navigate(`/${encodeURIComponent(league.name)}`);\n      })\n      .catch(error => {\n        console.error('Error fetching league:', error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Active Seasons List</h2>\n      <ul>\n        {activeSeasons.map(season => (\n          <li key={season.season_id}> \n            <button   onClick={() => handleLeagueClick(season.season_id, season.name)}>{season.name}</button>\n          </li>\n        ))}\n      </ul>\n      <h2>Past Seasons List</h2>\n      <ul>\n        {pastSeasons.map(season => (\n          <li key={season.season_id}> \n            <button   onClick={() => handleLeagueClick(season.season_id, season.name)}>{season.name}</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Seasons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}