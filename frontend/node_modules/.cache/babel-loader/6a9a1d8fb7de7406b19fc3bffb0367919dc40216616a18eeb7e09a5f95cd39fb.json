{"ast":null,"code":"var _jsxFileName = \"/Users/csark0812/Documents/stats-app/frontend/src/components/Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\nimport Popup from './Popup';\nimport AddTeamForm from './AddTeamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const navigate = useNavigate();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    console.log('here');\n  };\n  useEffect(() => {\n    // Make the API call to fetch the list of leagues\n    const selectedLeagueId = JSON.parse(sessionStorage.getItem('league')).league_id;\n    api.get('/teams/', {\n      params: {\n        league: selectedLeagueId\n      }\n    }).then(response => {\n      setTeams(response.data);\n    }).catch(error => {\n      console.error('Error fetching leagues:', error);\n    });\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  const handleLeagueClick = leagueId => {\n    api.get('/leagues/', {\n      params: {\n        league_id: leagueId\n      }\n    }) // Make the API call with league_id as a parameter\n    .then(response => {\n      const league = response.data[0]; // Assuming the response is a list with one league\n      sessionStorage.setItem('league', JSON.stringify(league));\n      navigate(`/${encodeURIComponent(league.name)}`);\n    }).catch(error => {\n      console.error('Error fetching league:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      buttonCaption: \"Create New Team\",\n      isOpen: isPopupOpen,\n      children: /*#__PURE__*/_jsxDEV(AddTeamForm, {\n        onSubmit: closePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Teams List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLeagueClick(team.team_id),\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, team.team_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Teams, \"rJVf0xLX02IypZstPdO1qmcSOIE=\", false, function () {\n  return [useNavigate];\n});\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","Popup","AddTeamForm","jsxDEV","_jsxDEV","Teams","_s","teams","setTeams","navigate","isPopupOpen","setIsPopupOpen","closePopup","console","log","selectedLeagueId","JSON","parse","sessionStorage","getItem","league_id","get","params","league","then","response","data","catch","error","handleLeagueClick","leagueId","setItem","stringify","encodeURIComponent","name","children","buttonCaption","isOpen","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","team","onClick","team_id","_c","$RefreshReg$"],"sources":["/Users/csark0812/Documents/stats-app/frontend/src/components/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\nimport Popup from './Popup'\nimport AddTeamForm from './AddTeamForm';\n\nconst Teams = () => {\n  const [teams, setTeams] = useState([]);\n  const navigate = useNavigate()\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    console.log('here')\n  };\n\n  useEffect(() => {\n    // Make the API call to fetch the list of leagues\n    const selectedLeagueId = JSON.parse(sessionStorage.getItem('league')).league_id;\n\n    api.get('/teams/', { params: { league: selectedLeagueId } })\n      .then(response => {\n        setTeams(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching leagues:', error);\n      });\n  }, []); // Empty dependency array ensures the effect runs only once\n  \n  const handleLeagueClick = (leagueId) => {\n    api.get('/leagues/', { params: { league_id: leagueId } }) // Make the API call with league_id as a parameter\n      .then(response => {\n        const league = response.data[0]; // Assuming the response is a list with one league\n        sessionStorage.setItem('league', JSON.stringify(league));\n        navigate(`/${encodeURIComponent(league.name)}`);\n      })\n      .catch(error => {\n        console.error('Error fetching league:', error);\n      });\n  };\n\n  return (\n    <div>\n    <Popup buttonCaption=\"Create New Team\" isOpen={isPopupOpen}><AddTeamForm onSubmit={closePopup} /></Popup>\n      <h2>Teams List</h2>\n      <ul>\n        {teams.map(team => (\n          <li key={team.team_id}> \n            <button   onClick={() => handleLeagueClick(team.team_id)}>{team.name}</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Teams;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}